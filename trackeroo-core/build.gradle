plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'ru.roansa.trackeroo_core'
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

/**
 * Publishing block
 */

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

project.afterEvaluate {
    publishToMavenLocal {
        publishing {
            publications{
                LibraryRelease(MavenPublication) {
                    from components.release
                    artifact(sourceJar)
                    setGroupId "ru.roansa.trackeroo"
                    setArtifactId "trackeroo-core"
                    version "0.1"
                }
            }
            publications.all {
                pom.withXml {
                    asNode().dependencies.'*'
                    .findAll() {
                        it.scope.text() == 'runtime' &&
                                project.configurations.implementation.allDependencies.find {
                                    dep -> dep.name == it.artifactid.text()
                                }
                    }.each { it.scope*.value = 'compile' }
                }
            }
        }
    }
}